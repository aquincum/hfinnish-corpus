-- Initial hanalyze.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hanalyze
version:             0.1.0.0
synopsis:            Haskell-based corpus analysis tools.
description:         Haskell-based corpus analysis tools. The main goal is to analyze a raw webcorpus that can be used for my dissertation. It is therefore mainly a learning tool so far.
homepage:            https://github.com/aquincum/hfinnish-corpus
license:             GPL
license-file:        LICENSE
author:              Daniel Szeredi
maintainer:          daniel@szeredi.hu
copyright:           (c) 2014 Daniel Szeredi
category:            Text
build-type:          Simple
cabal-version:       >=1.8

source-repository head
  type:              git
  location:          http://github.com/aquincum/hanalyze/

library
  exposed-modules:   Hanalyze.FreqDist, Hanalyze.Vowels,
                     Hanalyze.Process, Hanalyze.Progress,
                     Hanalyze.Token, Hanalyze.Phoneme,
                     Hanalyze.Pattern, Hanalyze.Omorfi
  build-depends:       base >=4.6,
                       containers, 
                       text,
                       time,
                       deepseq,
                       bytestring, 
                       mmap,
                       utf8-string,
                       filepath,
                       split,
                       parsec,
                       process >= 1.2.0.0,
                       unix

executable create_fds
  main-is:           create_fds.hs
  ghc-options:	     -threaded -rtsopts
  build-depends:     base >=4.6,
                     containers, 
                     text,
                     split,
                     deepseq,
                     time,
                     bytestring, mmap, utf8-string, filepath

executable merge_fds
  main-is:           merge_fds.hs
  ghc-options:       -threaded -rtsopts -O2
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, filepath,
                     split

executable filter_fds
  main-is:           filter_fds.hs
  ghc-options:       -rtsopts -O2
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, filepath,
                     split, parsec, process >= 1.2.0.0,
                     unix

executable stem_fds
  main-is:           stem_fds.hs
  ghc-options:       -rtsopts -O2
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, filepath,
                     split, temporary, process >= 1.2.0.0

executable hanalyze1
  main-is:           hanalyze1.hs
  ghc-options:       -rtsopts -O2
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, filepath,
                     split, parsec, process >= 1.2.0.0, unix

test-suite testing
  main-is:           testing.hs
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, HUnit >=1.2.5.2,
                     QuickCheck, process >= 1.2.0.0, filepath, split,
                     parsec, unix
  type:              exitcode-stdio-1.0

test-suite testing_phonemes
  main-is:           testing_phonemes.hs
  build-depends:     base >=4.6, containers, hanalyze, 
                     text, time, deepseq, parallel, mmap, 
                     utf8-string, bytestring, HUnit >=1.2.5.2,
                     QuickCheck, process >= 1.2.0.0, split, filepath
  type:              exitcode-stdio-1.0
